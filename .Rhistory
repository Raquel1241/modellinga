axis(1,at=mu0,labels="mu0")
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("ggplot2")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
#traindat=read.csv("C:/Users/sofia/OneDrive/Random/GitHub/modellinga/Battery_train.csv")
traindat = read.csv("./Data/Battery_train.csv")
#traindat = read.csv("/Users/tyrenkoning/Documents/GitHub/modellinga/Battery_train.csv")
traindat_new = gather(traindat, variable, value, -Cycle)
ggplot(data = traindat_new, aes(x = Cycle, y = value, group = variable)) +
xlab("t (cycles)") +
ylab(bquote("Capacity" ~ C["t,i"] ~ "(Ah)")) +
ggtitle("Figure 1: Battery capacity degradation data (training") +
geom_line() +
geom_hline(yintercept=0.88,
linetype="dashed",
color = "red",
size=0.5) +
annotate("text", x=1900, y=0.87, label= "Threshold: 0.88", colour = "red", size = 3) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 12),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "Black"))
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("ggplot2")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
#traindat=read.csv("C:/Users/sofia/OneDrive/Random/GitHub/modellinga/Battery_train.csv")
traindat = read.csv("./Data/Battery_train.csv")
#traindat = read.csv("/Users/tyrenkoning/Documents/GitHub/modellinga/Battery_train.csv")
traindat_new = gather(traindat, variable, value, -Cycle)
ggplot(data = traindat_new, aes(x = Cycle, y = value, group = variable)) +
xlab("t (cycles)") +
ylab(bquote("Capacity" ~ C["t,i"] ~ "(Ah)")) +
ggtitle("Figure 1: Battery capacity degradation data (training") +
geom_line() +
geom_hline(yintercept=0.88,
linetype="dashed",
color = "red",
linewidth=0.5) +
annotate("text", x=1900, y=0.87, label= "Threshold: 0.88", colour = "red", size = 3) +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 12),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "Black"))
library(ggplot2)
traindata = read.csv("./Battery_train.csv")
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2]
#fit polynomial regression models up to degree 5
fit1 <- lm(y~x, data=df)
View(df)
View(df)
#fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~Cycle, data=df)
fit1 <- lm(NO.1~Cycle, data=df)
fit1 <- lm(NO.1~Cycle, data=df)
df <- traindata[,1:2]
x <- Cycle
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~Cycle, data=df)
fit2 <- lm(NO.1~poly(Cycle,2,raw=TRUE), data=df)
fit3 <- lm(NO.1~poly(Cycle,3,raw=TRUE), data=df)
fit4 <- lm(NO.1~poly(Cycle,4,raw=TRUE), data=df)
fit5 <- lm(NO.1~poly(Cycle,5,raw=TRUE), data=df)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity')
ggplot(data = df, aes(x = Cycle, y = NO.1)) +
xlab("t (cycles)") +
ylab(bquote("Capacity" ~ C["t,i"] ~ "(Ah)")) +
ggtitle("Capacity degradation of battery 1") +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 12),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "Black"))
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5, size = 12),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "Black"))
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', linewidth = 0.5)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', lwd=0.5)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', lwd=0.5)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', lwd=0.5)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', lwd=0.05)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=5.0)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=0.5)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
View(fit1)
View(fit1)
#define x-axis values
x_axis <- seq(1, 2000, length=2000)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~Cycle, data=df)
fit2 <- lm(NO.1~poly(Cycle,2,raw=TRUE), data=df)
fit3 <- lm(NO.1~poly(Cycle,3,raw=TRUE), data=df)
fit4 <- lm(NO.1~poly(Cycle,4,raw=TRUE), data=df)
fit5 <- lm(NO.1~poly(Cycle,5,raw=TRUE), data=df)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
#define x-axis values
x_axis <- seq(1, 2000, length=2000)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~Cycle, data=df)
fit2 <- lm(NO.1~poly(Cycle,2,raw=TRUE), data=df)
fit3 <- lm(NO.1~poly(Cycle,3,raw=TRUE), data=df)
fit4 <- lm(NO.1~poly(Cycle,4,raw=TRUE), data=df)
fit5 <- lm(NO.1~poly(Cycle,5,raw=TRUE), data=df)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
#define x-axis values
x_axis <- seq(1, 2000, length=2000)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=x_axis)), col='green')
View(fit5)
View(fit5)
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~x, data=df)
# fit polynomial regression models up to degree 5
fit1 <- lm(df.NO.1~d.Cycle)
# fit polynomial regression models up to degree 5
fit1 <- lm(NO.1~Cycle, data=df)
View(df)
View(df)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x = df.Cycle)), col='green')
class(df)
df[1,:]
df[1]
df[1]
df[,11]
df[1,1]
df[1,]
df[,1]
#define x-axis values
x_axis <- df[,1]
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x = x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
df[,2]
View(df)
View(df)
# fit polynomial regression models up to degree 5
fit1 <- lm(df[,2]~df[,1])
str(df)
df$Cycle
df$NO.1
# fit polynomial regression models up to degree 5
fit1 <- lm(df$NO.1~df$Cycle)
fit2 <- lm(df$NO.1~poly(df$Cycle,2,raw=TRUE))
fit3 <- lm(df$NO.1~poly(df$Cycle,3,raw=TRUE))
fit4 <- lm(df$NO.1~poly(df$Cycle,4,raw=TRUE))
fit5 <- lm(df$NO.1~poly(df$Cycle,5,raw=TRUE))
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1)
#define x-axis values
x_axis <- df[,1]
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x = x_axis)), col='green')
lines(x_axis, predict(fit2, data.frame(x=x_axis)), col='red')
lines(x_axis, predict(fit3, data.frame(x=x_axis)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=x_axis)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=x_axis)), col='orange')
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1.5)
#define x-axis values
x_axis <- df[,1]
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(df$NO.1~df$Cycle)
fit2 <- lm(df$NO.1~poly(df$Cycle,2,raw=TRUE))
fit3 <- lm(df$NO.1~poly(df$Cycle,3,raw=TRUE))
fit4 <- lm(df$NO.1~poly(df$Cycle,4,raw=TRUE))
fit5 <- lm(df$NO.1~poly(df$Cycle,5,raw=TRUE))
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1.5)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=df$Cycle)), col='green')
lines(x_axis, predict(fit2, data.frame(x=df$Cycle)), col='red')
lines(x_axis, predict(fit3, data.frame(x=df$Cycle)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=df$Cycle)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=df$Cycle)), col='orange')
#calculated adjusted R-squared of each model
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
summary(fit3)$adj.r.squared
summary(fit4)$adj.r.squared
summary(fit5)$adj.r.square
legend(1, 95, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.8)
lines(x_axis, predict(fit5, data.frame(x=df$Cycle)), col='orange')
legend(1, 95, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.8)
#calculated adjusted R-squared of each model
summary(fit1)$adj.r.squared
legend(2000, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.8)
legend(2000, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.04)
#calculated adjusted R-squared of each model
summary(fit1)$adj.r.squared
summary(fit2)$adj.r.squared
library(ggplot2)
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:2] # take only first battery
# fit polynomial regression models up to degree 5
fit1 <- lm(df$NO.1~df$Cycle)
fit2 <- lm(df$NO.1~poly(df$Cycle,2,raw=TRUE))
fit3 <- lm(df$NO.1~poly(df$Cycle,3,raw=TRUE))
fit4 <- lm(df$NO.1~poly(df$Cycle,4,raw=TRUE))
fit5 <- lm(df$NO.1~poly(df$Cycle,5,raw=TRUE))
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1.5)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=df$Cycle)), col='green')
lines(x_axis, predict(fit2, data.frame(x=df$Cycle)), col='red')
lines(x_axis, predict(fit3, data.frame(x=df$Cycle)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=df$Cycle)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=df$Cycle)), col='orange')
legend(2000, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.4)
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.4)
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.5)
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.8)
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.6)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=1.5)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=df$Cycle)), col='green')
lines(x_axis, predict(fit2, data.frame(x=df$Cycle)), col='red')
lines(x_axis, predict(fit3, data.frame(x=df$Cycle)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=df$Cycle)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=df$Cycle)), col='orange')
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.6)
# create a scatterplot of cycle vs. capacity
plot(df$Cycle, df$NO.1, pch=19, xlab='Cycle', ylab='Capacity', type="l", lwd=2)
#add curve of each model to plot
lines(x_axis, predict(fit1, data.frame(x=df$Cycle)), col='green')
lines(x_axis, predict(fit2, data.frame(x=df$Cycle)), col='red')
lines(x_axis, predict(fit3, data.frame(x=df$Cycle)), col='purple')
lines(x_axis, predict(fit4, data.frame(x=df$Cycle)), col='blue')
lines(x_axis, predict(fit5, data.frame(x=df$Cycle)), col='orange')
legend(0, 1, legend=c("Linear", "First degree", "Second degree", "Third degree", "Fourth degree", "Fifth degree"),
col=c("green", "red", "purple", "blue", "orange"), lty=1:2, cex=0.6)
#calculated adjusted R-squared of each model
summary(fit1)$adj.r.squared
traindata = read.csv("./Data/Battery_train.csv")
df <- traindata[,1:3] # take only first battery
head(df)
summary(df)
df$NO.2
df[,2:3]
